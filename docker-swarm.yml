version: '3.3'

networks:
  net:
    driver: overlay
    attachable: true
  traefik-public:
    external: true

services:
  # db:
  #   image: mongo:4.2-bionic
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.role == manager
  #   command: --wiredTigerJournalCompressor zstd --wiredTigerCollectionBlockCompressor zstd
  #   networks:
  #     - net
  #   # ports:
  #   #   - "27017:27017"
  # db-init:
  #   image: tethysts/tethys-db-initialize:dev
  #   deploy:
  #     restart_policy:
  #       condition: none
  #     placement:
  #       constraints:
  #         - node.role == manager
  #   networks:
  #     - net
  #   volumes:
  #       - "~/git/tethys/tethys-wai-vis/parameters.yml:/parameters.yml"
  #   depends_on:
  #     - "db"
  # web-service:
  #   image: tethysts/tethys-web-service:dev
  #   depends_on:
  #     - "db"
  #   # ports:
  #   #   - "80:80"
  #   # volumes:
  #   #   - /var/run/docker.sock:/var/run/docker.sock:ro
  #   networks:
  #     - net
  #     - traefik-public
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.role == manager
  #     labels:
  #       - traefik.enable=true
  #       - traefik.docker.network=traefik-public
  #       - traefik.constraint-label=traefik-public
  #       - traefik.http.routers.tethys-api-http.rule=Host(`api.tethys-ts.xyz`)
  #       - traefik.http.routers.tethys-api-http.entrypoints=http
  #       - traefik.http.routers.tethys-api-http.middlewares=https-redirect
  #       - traefik.http.routers.tethys-api-https.rule=Host(`api.tethys-ts.xyz`)
  #       - traefik.http.routers.tethys-api-https.entrypoints=https
  #       - traefik.http.routers.tethys-api-https.tls=true
  #       # - traefik.http.routers.tethys-api-https.tls.certresolver=le
  #       - traefik.http.services.tethys-api.loadbalancer.server.port=80
  wai-vis:
    image: tethysts/tethys-wai-vis:1.2
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    # depends_on:
    #   - "web-service"
    # ports:
    #   - "8081:80"
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - net
      - traefik-public
    deploy:
      placement:
        constraints:
          # - node.role == manager
          - node.hostname == esnode2.nzrivers.xyz
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.tethys-wai-http.rule=Host(`wai.tethys-ts.xyz`)
        - traefik.http.routers.tethys-wai-http.entrypoints=http
        - traefik.http.routers.tethys-wai-http.middlewares=https-redirect
        - traefik.http.routers.tethys-wai-https.rule=Host(`wai.tethys-ts.xyz`)
        - traefik.http.routers.tethys-wai-https.entrypoints=https
        - traefik.http.routers.tethys-wai-https.tls=true
        # - traefik.http.routers.tethys-wai-https.tls.certresolver=le
        - traefik.http.services.tethys-wai.loadbalancer.server.port=80
